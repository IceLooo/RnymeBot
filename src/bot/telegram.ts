import { Telegraf } from 'telegraf';
import dotenv from 'dotenv';
import { getRhymes } from '../services/rhyme.service';
import { RhymeRequest } from '../db/mongo/models/RhymeRequest';

dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN!);

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
bot.start((ctx) => {
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ ‚Äî —è –Ω–∞–π–¥—É –∫ –Ω–µ–º—É —Ä–∏—Ñ–º—ã ‚úçÔ∏è');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
  const input = ctx.message.text.trim();

  ctx.reply(`–ò—â—É —Ä–∏—Ñ–º—ã –¥–ª—è —Å–ª–æ–≤–∞: "${input}"...`);

  try {
    const rhymes = await getRhymes(input);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ MongoDB
    await RhymeRequest.create({
      word: input,
      rhymes,
      userId: ctx.from?.id?.toString() || 'anonymous'
    });

    if (rhymes.length === 0) {
      ctx.reply('–£–≤—ã, —Ä–∏—Ñ–º –Ω–µ –Ω–∞—à–ª–æ—Å—å üòï –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ.');
    } else {
      ctx.reply(`–í–æ—Ç —á—Ç–æ –Ω–∞—à—ë–ª:\n${rhymes.join(' / ')}`);
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', err);
    ctx.reply('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π —á—É—Ç—å –ø–æ–∑–∂–µ üôè');
  }
});

export function launchBot() {
  bot.launch();
  console.log('ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');
}
